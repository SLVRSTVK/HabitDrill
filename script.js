// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
const tg = window.Telegram.WebApp;

// –°–æ–∑–¥–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
function createCalendar() {
    const calendar = document.getElementById('calendar');
    const today = new Date();
    const currentMonth = today.getMonth();
    const currentYear = today.getFullYear();
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –≤ –º–µ—Å—è—Ü–µ
    const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();
    
    // –ú–∞—Å—Å–∏–≤ –Ω–∞–∑–≤–∞–Ω–∏–π –º–µ—Å—è—Ü–µ–≤
    const months = ['–Ø–Ω–≤', '–§–µ–≤', '–ú–∞—Ä', '–ê–ø—Ä', '–ú–∞–π', '–ò—é–Ω', '–ò—é–ª', '–ê–≤–≥', '–°–µ–Ω', '–û–∫—Ç', '–ù–æ—è', '–î–µ–∫'];
    
    // –ú–∞—Å—Å–∏–≤ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
    const weekDays = ['–í—Å', '–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±'];
    
    // –°–æ–∑–¥–∞–µ–º –¥–Ω–∏ –º–µ—Å—è—Ü–∞
    for (let day = 1; day <= daysInMonth; day++) {
        const dayDate = new Date(currentYear, currentMonth, day);
        const dayOfWeek = dayDate.getDay();
        
        const dayElement = document.createElement('div');
        dayElement.className = 'calendar-day';
        
        const dayWeek = document.createElement('div');
        dayWeek.className = 'day-week';
        dayWeek.textContent = weekDays[dayOfWeek];
        
        const dayNumber = document.createElement('div');
        dayNumber.className = 'day-number';
        dayNumber.textContent = day;
        
        dayElement.appendChild(dayWeek);
        dayElement.appendChild(dayNumber);
        
        // –í—ã–¥–µ–ª—è–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å
        if (day === today.getDate()) {
            dayElement.classList.add('today');
        }
        
        calendar.appendChild(dayElement);
    }
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–º—É –¥–Ω—é
    setTimeout(() => {
        const todayElement = calendar.querySelector('.today');
        if (todayElement) {
            todayElement.scrollIntoView({ behavior: 'smooth', inline: 'center' });
        }
    }, 100);
}

// –†–∞—Å—à–∏—Ä—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
tg.expand();

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∏–∂–Ω–∏—Ö —Ç–∞–±–æ–≤
function initTabsHandler() {
    const tabItems = document.querySelectorAll('.tab-item');
    
    tabItems.forEach(tab => {
        tab.addEventListener('click', () => {
            const tabType = tab.dataset.tab;
            
            // –£–±–∏—Ä–∞–µ–º active —Å –≤—Å–µ—Ö —Ç–∞–±–æ–≤
            tabItems.forEach(t => t.classList.remove('active'));
            
            // –î–æ–±–∞–≤–ª—è–µ–º active –∫ —Ç–µ–∫—É—â–µ–º—É —Ç–∞–±—É
            if (tabType !== 'add') {
                tab.classList.add('active');
            }
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ —Ç–∞–±–∞–º
            switch(tabType) {
                case 'habits':
                    console.log('–û—Ç–∫—Ä—ã—Ç —Ç–∞–± –ø—Ä–∏–≤—ã—á–µ–∫');
                    break;
                case 'add':
                    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏
                    openAddHabitModal();
                    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º active –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –∞–∫—Ç–∏–≤–Ω–æ–º—É —Ç–∞–±—É
                    const activeTab = document.querySelector('.tab-item[data-tab="habits"]');
                    if (activeTab) activeTab.classList.add('active');
                    break;
                case 'stats':
                    console.log('–û—Ç–∫—Ä—ã—Ç —Ç–∞–± —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
                    break;
            }
        });
    });
}

// –°–æ–∑–¥–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
createCalendar();

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–∞–π–ø–æ–≤ –¥–ª—è content-block
function initSwipeHandler() {
    const contentBlock = document.getElementById('contentBlock');
    let startY = 0;
    let currentY = 0;
    let isDragging = false;
    
    contentBlock.addEventListener('touchstart', (e) => {
        // –í—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏ –≤—Å–ø–ª—ã—Ç–∏–µ
        e.preventDefault();
        e.stopPropagation();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–∞—Å–∞–Ω–∏–µ –Ω–µ –ø–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º —ç–ª–µ–º–µ–Ω—Ç–∞–º
        const target = e.target;
        const isInteractive = target.closest('.habit-checkbox') || 
                             target.closest('.habit-skip') || 
                             target.closest('button') || 
                             target.closest('input') ||
                             target.closest('.emoji-option');
        
        if (isInteractive) {
            isDragging = false;
            return;
        }
        
        startY = e.touches[0].clientY;
        isDragging = true;
        contentBlock.style.transition = 'none';
    });
    
    contentBlock.addEventListener('touchmove', (e) => {
        // –í—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏ –≤—Å–ø–ª—ã—Ç–∏–µ
        e.preventDefault();
        e.stopPropagation();
        
        if (!isDragging) return;
        
        currentY = e.touches[0].clientY;
        const deltaY = currentY - startY;
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ
        if (deltaY > 0) {
            const translateY = Math.min(deltaY, window.innerHeight * 0.5);
            contentBlock.style.transform = `translateY(${translateY}px)`;
        }
    });
    
    contentBlock.addEventListener('touchend', (e) => {
        // –í—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏ –≤—Å–ø–ª—ã—Ç–∏–µ
        e.preventDefault();
        e.stopPropagation();
        
        if (!isDragging) return;
        
        isDragging = false;
        contentBlock.style.transition = 'transform 0.3s ease';
        
        const deltaY = currentY - startY;
        const threshold = window.innerHeight * 0.2; // 20% –æ—Ç –≤—ã—Å–æ—Ç—ã —ç–∫—Ä–∞–Ω–∞
        
        if (deltaY > threshold) {
            // –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
            contentBlock.classList.add('collapsed');
            contentBlock.style.transform = '';
        } else {
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞ –º–µ—Å—Ç–æ
            contentBlock.classList.remove('collapsed');
            contentBlock.style.transform = '';
        }
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —Ä—É—á–∫–µ
    const dragHandle = document.querySelector('.drag-handle');
    dragHandle.addEventListener('click', () => {
        contentBlock.classList.toggle('collapsed');
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–≤–∞–π–ø–æ–≤ –∏ —Ç–∞–±–æ–≤
initSwipeHandler();
initTabsHandler();

// –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–µ–∫
let habits = [
    {
        id: 1,
        name: '–ë–µ–≥–∞—Ç—å',
        emoji: 'üèÉ',
        completed: false,
        createdAt: new Date()
    },
    {
        id: 2,
        name: '–ö—É—à–∞—Ç—å',
        emoji: 'üçé',
        completed: false,
        createdAt: new Date()
    }
];
let selectedEmoji = 'üèÉ'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–∏–≤—ã—á–∫–∏
function createHabitCard(habit) {
    const habitCard = document.createElement('div');
    habitCard.className = 'habit-item';
    habitCard.innerHTML = `
        <div class="habit-left">
            <div class="habit-checkbox ${habit.completed ? 'checked' : ''}" data-id="${habit.id}"></div>
            <div class="habit-info">
                <div class="habit-emoji">${habit.emoji}</div>
                <div class="habit-name">${habit.name}</div>
            </div>
        </div>
        <div class="habit-right">
            <button class="habit-skip" data-id="${habit.id}">–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å</button>
        </div>
    `;
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —á–µ–∫–±–æ–∫—Å–∞
    const checkbox = habitCard.querySelector('.habit-checkbox');
    checkbox.addEventListener('click', () => {
        const habitId = parseInt(checkbox.dataset.id);
        const habit = habits.find(h => h.id === habitId);
        if (habit) {
            habit.completed = !habit.completed;
            checkbox.classList.toggle('checked');
        }
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
    const skipBtn = habitCard.querySelector('.habit-skip');
    skipBtn.addEventListener('click', () => {
        const habitId = parseInt(skipBtn.dataset.id);
        // –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞ –ø—Ä–∏–≤—ã—á–∫–∏
        console.log(`–ü—Ä–æ–ø—É—â–µ–Ω–∞ –ø—Ä–∏–≤—ã—á–∫–∞ —Å ID: ${habitId}`);
    });
    
    return habitCard;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–µ–∫
function renderHabits() {
    const container = document.getElementById('habitsContainer');
    container.innerHTML = '';
    
    habits.forEach(habit => {
        const card = createHabitCard(habit);
        container.appendChild(card);
    });
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–∏–≤—ã—á–µ–∫, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
    if (habits.length === 0) {
        container.innerHTML = `
            <div style="text-align: center; color: #666; padding: 40px 20px;">
                <p>–ü–æ–∫–∞ –Ω–µ—Ç –ø—Ä–∏–≤—ã—á–µ–∫</p>
                <p style="font-size: 14px;">–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "+" —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤—É—é –ø—Ä–∏–≤—ã—á–∫—É</p>
            </div>
        `;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openAddHabitModal() {
    const modal = document.getElementById('addHabitModal');
    const habitName = document.getElementById('habitName');
    const saveBtn = document.getElementById('saveBtn');
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
    habitName.value = '';
    selectedEmoji = 'üèÉ';
    saveBtn.disabled = true;
    
    // –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π —ç–º–æ–¥–∑–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    document.querySelectorAll('.emoji-option').forEach(option => {
        option.classList.remove('selected');
    });
    document.querySelector('[data-emoji="üèÉ"]').classList.add('selected');
    
    modal.style.display = 'flex';
    setTimeout(() => habitName.focus(), 100);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeAddHabitModal() {
    const modal = document.getElementById('addHabitModal');
    modal.style.display = 'none';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏
function saveHabit() {
    const habitName = document.getElementById('habitName').value.trim();
    
    if (habitName && selectedEmoji) {
        const newHabit = {
            id: Date.now(), // –ü—Ä–æ—Å—Ç–æ–π ID –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ä–µ–º–µ–Ω–∏
            name: habitName,
            emoji: selectedEmoji,
            completed: false,
            createdAt: new Date()
        };
        
        habits.push(newHabit);
        renderHabits();
        closeAddHabitModal();
        
        console.log('–î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –ø—Ä–∏–≤—ã—á–∫–∞:', newHabit);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function initHabitsModal() {
    const modal = document.getElementById('addHabitModal');
    const closeBtn = document.getElementById('closeModal');
    const cancelBtn = document.getElementById('cancelBtn');
    const saveBtn = document.getElementById('saveBtn');
    const habitName = document.getElementById('habitName');
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    closeBtn.addEventListener('click', closeAddHabitModal);
    cancelBtn.addEventListener('click', closeAddHabitModal);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Ñ–æ–Ω
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            closeAddHabitModal();
        }
    });
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏
    saveBtn.addEventListener('click', saveHabit);
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª—è –≤–≤–æ–¥–∞
    habitName.addEventListener('input', () => {
        const isValid = habitName.value.trim().length > 0;
        saveBtn.disabled = !isValid;
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    habitName.addEventListener('keypress', (e) => {
        if (e.key === 'Enter' && !saveBtn.disabled) {
            saveHabit();
        }
    });
    
    // –í—ã–±–æ—Ä —ç–º–æ–¥–∑–∏
    document.querySelectorAll('.emoji-option').forEach(option => {
        option.addEventListener('click', () => {
            // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö —ç–º–æ–¥–∑–∏
            document.querySelectorAll('.emoji-option').forEach(opt => {
                opt.classList.remove('selected');
            });
            
            // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–º–æ–¥–∑–∏
            option.classList.add('selected');
            selectedEmoji = option.dataset.emoji;
        });
    });
}

// –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
tg.ready();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—Ä–∏–≤—ã—á–∫–∏
initHabitsModal();
renderHabits();
